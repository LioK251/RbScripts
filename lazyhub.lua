repeat wait() until game:IsLoaded()

-- This file was generated using Luraph Obfuscator v13.5.3

return(function(k_,i_,l_,s_,B_,j_,Z_,n_,h_,g_,S_,y_,U_,V_,L_,u_,W_,D_,w_,H_,P_,I_,t_,Y_,X_,R_,T_,Q_,J_,x_,d_,C_,N_,a_,z_,b_,m_,E_,...)local e,r,K_=select,pcall,(0X2);local U,O,E=nil,nil,(nil);while-0X00D1Ece52 do if not(K_<=0X000)then if K_==0x1 then O=d_;K_=0;else U=0X80000000;K_=0X1;end;else E=U-0X0001;break;end;end;local c=assert;do K_=0X00001;end;local p,f=nil,(nil);while K_~=2 do if K_~=0X0 then p=w_;K_=0x000;else f=t_;K_=0X2;end;end;local b=unpack or J_;local I=(setmetatable);K_=2;local q,w,J,k=nil,nil,nil,(nil);while K_<4 do if not(K_<=1)then if K_~=0x0002 then k={[0X0000]={[0]=0,h_,0x2,0X3,0X00004,5,6,0X07,0X08,g_,0xA,V_,12,13,0XE,15},{[0]=0X1,0,3,0X0002,0X5,0X4,0x7,6,9,8,11,b_,13,0xc,15,0X000E},{[0]=0X2,3,0x00,1,6,7,0X004,5,0X000A,0X000B,8,g_,14,15,0X0000C,13},{[X_]=0X3,0X2,1,0X0,0x007,0X6,5,a_,0xb,10,g_,0X8,15,14,0X0000d,0X000c},{[0]=0X0004,0X05,S_,Z_,0X00,0X001,0X2,3,0XC,13,0XE,15,8,9,b_,0X0B},{[0]=5,4,7,6,1,X_,0x0003,2,0X00d,0XC,15,14,0x0009,B_,11,10},{[0X000]=6,0x7,4,5,0x2,0X3,0X0,1,0XE,15,12,13,0Xa,11,0x8,0x009},{[0]=7,0X6,5,4,3,2,h_,0X0,0Xf,0Xe,0X00D,12,11,0XA,0X009,8},{[0X00]=8,0X009,0X00A,11,12,0x00D,0Xe,0Xf,0X0000,0X001,2,3,0X04,5,0x0006,7},{[X_]=0X00009,B_,0X000B,10,13,12,15,14,1,X_,3,Y_,0x5,4,7,6},{[0X0]=0XA,V_,0X8,9,0XE,15,12,0xD,0x02,3,0X0,h_,6,0X07,0X4,0X00005},{[0]=0Xb,10,0X0009,0X0008,0x0000F,0xE,13,12,3,2,0x1,0X00,7,S_,n_,4},{[0]=L_,0xD,14,15,8,9,10,11,4,n_,0x06,0X007,0x00000,h_,2,0X3},{[0X0]=13,0X00C,15,0x00E,0X009,8,11,10,0X5,4,7,S_,1,0,3,0X00002},{[0]=0XE,0X0000F,L_,0X0000d,10,11,8,9,6,0X07,0x4,5,2,P_,0x0,1},{[0X0]=0Xf,14,0x0000d,12,0x0000B,10,g_,0X08,0X00007,0X6,0x5,0X4,3,0X0002,h_,0X0}};K_=4;else do q=I_;end;K_=0X0;end;elseif K_==0X0 then w=W_;do K_=1;end;else do J=Q_;end;K_=3;end;end;local W=rawget;K_=4;local h,d,O_,V,Z=nil,nil,nil,nil,nil;repeat if K_<=1 then if K_~=0X0 then O_=0X001;K_=0;else do V=H_;end;K_=2;end;else do if not(K_<=2)then if K_~=3 then do h=U_;end;do K_=3;end;else d=j_;K_=0X0001;end;else Z=h_;break;end;end;end;until(false);local v,G_=tonumber,(nil);do for UI=0,1 do if UI==0X0 then else G_={};end;end;end;local a=(m_);local S=((a and a()or _ENV));K_=0X0;local B,Y=nil,nil;while K_<=0x2 do if not(K_<=0x0)then if K_~=0x1 thenx1;else K_=0X3;end;else do K_=0X02;end;end;end;K_=2;local o,L=nil,nil;while"\033R\073"do if K_<=0 then L=function()local Fd,Dd=0x00001,nil;while 0x5DFBC185 do if not(Fd<=0)then if Fd~=1 then Z=Z+1;Fd=0x0;else Dd=q(B,Z,Z);do Fd=2;end;end;else return Dd;end;end;end;do break;end;else do if K_~=0x00001 then o=E_;do K_=1;end;else B=w(p(B,5),"..",function(MM)if q(MM,0X2)~=0x000048 then local uE=(1);local BE=nil;while uE<0X2 do do if uE~=0X000 then BE=f(v(MM,0X10));uE=0;else do if not(Y)then do return BE;end;else local o1=(d(BE,Y));do Y=nil;end;return o1;end;end;uE=2;end;end;end;else local Qq=0;repeat do if Qq~=0X0 then return"";else Y=v(p(MM,1,h_));Qq=1;end;end;until false;end;end);K_=0X0000;end;end;end;end;local Q=(rawset);local X=setfenv;local P=(function()local GA,KA,NA,HA=nil,nil,nil,nil;for pP=0x0,1 do if pP==0 then do GA,KA,NA,HA=q(B,Z,Z+0x3);end;else Z=Z+4;end;end;return HA*16777216+NA*65536+KA*0x0100+GA;end);local t=l_;K_=1;local g,H=nil,(nil);do repeat if K_==0X000 then H=0X2^T_;break;else g=coroutine.wrap;K_=0x0;end;until false;end;local j=4294967296;do K_=0X0;end;local m,l,N,T,D=nil,nil,nil,nil,(nil);repeat if K_<=0X2 then if K_<=0 then m=j-0X1;do K_=2;end;else if K_==1 then D=function()local CX,QX,oX=0X0001,nil,nil;do while(true)do do if not(CX<=0X0)then if CX==1 then do QX,oX=P(),P();end;CX=0X00002;else if oX>=U then do oX=oX-j;end;end;CX=0;end;else return oX*j+QX;end;end;end;end;end;do K_=6;end;else l={[0X0]=h_};K_=0x3;end;end;else if not(K_<=0X3)then if K_~=4 then do T=function(jD,HD,OD)local qD=((jD/l[HD])%l[OD]);qD=qD-qD%0X1;return qD;end;end;do K_=1;end;else do local zW=nil;local tW=0x001;repeat if tW==0X0 then for r8=0X001,31 do local w8=(1);while(true)do do if w8~=0X0 then(l)[r8]=zW;w8=0X00000;else zW=zW*0X00002;break;end;end;end;end;tW=0x2;else zW=Y_;tW=0X00;end;until tW>=2;end;K_=0X05;end;else N=(D_ or R_);K_=0x00004;end;end;until K_==6;local G=(type);local R=function()local tf=0X1;local Kf,Bf=nil,nil;while tf~=3 do if not(tf<=0X000)then if tf~=1 then if not(Kf==0 and Bf==0)then else return 0X0;end;tf=0X3;else Kf=P();do tf=0;end;end;else Bf=P();tf=2;end;end;local xf=((-0X1)^T(Bf,31,0x1));local Tf=1;local Yf=(T(Bf,20,11));local Uf=T(Bf,0,20)*j+Kf;if Yf==0X0 then if Uf==0x0 then return xf*0x0;else Yf=0X1;Tf=0;end;else if Yf~=0X07FF then else if Uf==0 then return xf*(0X0/0);else return xf*(1/0X0);end;end;end;return xf*(0X00002^(Yf-1023))*(Uf/H+Tf);end;local x=N and N[k_]or function(MV,HV)local lV,dV=nil,nil;do for y9=0,5 do if not(y9<=0x02)then do if not(y9<=3)then do if y9~=0X4 then return lV+MV*dV+HV*dV;else while MV>0 and HV>X_ do local F1,x1,a1=0,nil,(nil);repeat if F1==0X0000 then x1=MV%N_;do F1=0X001;end;else a1=HV%16;F1=2;end;until F1>0x0001;F1=0X0;do while F1~=0X003 do do if not(F1<=0X0)then if F1~=1 then HV=(HV-a1)/16;F1=0X3;else do MV=(MV-x1)/16;end;do F1=2;end;end;else do lV=lV+k[x1][a1]*dV;end;F1=1;end;end;end;end;dV=dV*16;end;end;end;else dV=0x1;end;end;elseif y9<=0X0 then do MV=MV%j;end;else if y9~=1 then lV=0X00000;else HV=HV%j;end;end;end;end;end;local u=(N and N[x_]or function(h3,j3)h3=h3%j;j3=j3%j;return((h3+j3)-x(h3,j3))/0x02;end);local z=N and N.bor or function(At,Ft)do for hB=0X0,0X02 do if hB<=0X0 then do At=At%j;end;else if hB==0X01 then do Ft=Ft%j;end;else return m-u(m-At,m-Ft);end;end;end;end;end;local s,y,i=N and N.bnot or function(eN)do return m-(eN%j);end;end,N and N.lshift,N and N[u_];do y=y or function(Uo,bo)if not(bo>=0X20)then else return 0x0;end;local mo=(1);repeat if mo==0 then return(Uo*l[bo])%j;else do if bo<0x0 then do return i(Uo,-bo);end;end;end;do mo=0X0;end;end;until(false);end;end;i=i or function(Xc,uc)if uc>=0x20 then return 0;end;do if uc<0X0 then return y(Xc,-uc);end;end;local rc,Pc=1,nil;while'\104\080V['do do if rc~=0X0 then do Pc=(Xc%j/l[uc]);end;do rc=0X0;end;else return Pc-Pc%1;end;end;end;end;local F,K,A=nil,nil,nil;for PZ=0,0X00002 do if not(PZ<=0)then if PZ~=0X0001 then A=function()local gU=(F());local tU=(0);repeat if tU==0 then do if not(gU>E)then else return gU-j;end;end;tU=1;else return gU;end;until false;end;else K={[0X0005]=0x7,[0x003]=0x04,[g_]=1,[0X5]=h_,[0]=4,[0x00002]=0X00007,[0]=n_,[7]=0x4,[0x1]=5};end;else F=function()local ix,Bx=0X0,0;while'\115\111\126\053\094'do local F0=q(B,Z,Z);do Z=Z+1;end;do Bx=z(Bx,y(u(F0,127),ix));end;if u(F0,0X080)~=0 then else return Bx;end;ix=ix+0X7;end;end;end;end;local M=L();local c_=L();K_=1;local e_,r_=nil,nil;repeat if K_~=0X0 then do e_=function(dl)local Pl,el=nil,nil;local sl=(1);while sl<=1 do if sl~=0X000 then Pl={q(B,Z,Z+0X0003)};sl=0;else el=x(Pl[1],c_);sl=0x2;end;end;local hl=x(Pl[0X2],c_);local Vl=x(Pl[3],c_);local Jl=x(Pl[0X04],c_);sl=0;while 0.7530412776331936 do if sl<=0x0 then c_=(49*c_+dl)%0X0100;sl=1;else if sl~=0x1 then return Jl*16777216+Vl*z_+hl*0x0100+el;else Z=Z+4;sl=0X2;end;end;end;end;end;K_=0;else r_=function(...)return e("#",...),{...};end;do break;end;end;until(false);local C,o_,v_,p_,q_,f_={0X3,h_,2},nil,nil,nil,nil,nil;for ZL=0,0X6 do do if not(ZL<=2)then do if ZL<=4 then if ZL==3 then function p_(aD,HD,iD)local CD=aD[4];local GD,jD,kD,tD=aD[3],aD[0X07],aD[0X6],aD[0x5];local VD=aD[8];local cD=(aD[0X2]);local oD=(I({},{__mode="v"}));local hD,XD=aD[9],(nil);do XD=function(...)local FF=1;local rF=(a and a()or _ENV);local RF=({});local uF,wF=r_(...);uF=uF-1;for MZ=0X0,uF do if not(GD>MZ)then do break;end;else(RF)[MZ]=wF[MZ+0X1];end;end;o_[1]=aD;(o_)[2]=RF;local OF=(rF==S and iD or rF);if not tD then wF=nil;elseif CD then RF[GD]={n=uF>=GD and uF-GD+1 or 0,b(wF,GD+1,uF+0X001)};end;local IF=0X0000;if OF~=rF then if not(X)then _ENV=OF;else X(XD,OF);end;end;local yF,ZF,zF,aF=r(function()while true do local IG=VD[FF];local PG=(IG[0X6]);FF=FF+0x00001;do if not(PG>=45)then if PG>=0x16 then if PG>=33 then if PG>=0X000027 then do if not(PG>=42)then if PG>=0X28 then do if PG==41 then RF[IG[0X1]]=IG[4];else local SN=IG[0X1];local nN,vN=RF[SN]();if nN then do FF=IG[3];end;RF[SN+0X03]=vN;end;end;end;else do if RF[IG[0X3]]~=RF[IG[2]]then FF=IG[1];end;end;end;else if PG>=43 then do if PG==0X002c then RF[IG[0X00001]]={};else RF[IG[0X001]]=true;end;end;else local RQ=(IG[1]);RF[RQ]=RF[RQ](RF[RQ+0X1],RF[RQ+0x2]);IF=RQ;end;end;end;else if not(PG<36)then do if PG<0X25 then RF[IG[1]]=RF[IG[0x0003]]%RF[IG[2]];else if PG~=38 then do RF[IG[1]]=RF[IG[3]]>=RF[IG[0x2]];end;else local rK=(IG[0x0003]);local NK=(RF[rK]);for W1=rK+0x1,IG[0x2]do do NK=NK..RF[W1];end;end;RF[IG[1]]=NK;end;end;end;else if not(PG>=0x22)then if IG[2]~=189 then local qI=(IG[0X0001]);for mM=qI,qI+(IG[3]-1)do(RF)[mM]=wF[GD+(mM-qI)+0X0001];end;else FF=FF-0x1;do VD[FF]={[0x1]=(IG[0X1]-85),[6]=11,[3]=(IG[3]-0X55)};end;end;else do if PG~=0x00023 then(RF)[IG[1]]=RF[IG[0x00003]]>RF[IG[0X00002]];else if not(RF[IG[3]]<RF[IG[0X002]])then do FF=IG[1];end;end;end;end;end;end;end;else if PG>=0X1b then if PG<0X01e then if not(PG<0X1c)then do if PG==0X01d then local nP=(IG[0X3]);RF[IG[0X1]]=RF[nP]..RF[nP+1];else do(RF)[IG[1]]=RF[IG[0x3]]*IG[7];end;end;end;else(RF[IG[0x001]])[IG[0x04]]=RF[IG[0X2]];end;else if PG<31 then local y8=HD[IG[0x00003]];RF[IG[0X1]]=y8[0X001][y8[2]];else do if PG~=0X000020 then RF[IG[0X001]]=x(RF[IG[3]],RF[IG[0x2]]);else if RF[IG[0X0003]]~=IG[0X07]then else FF=IG[0X1];end;end;end;end;end;else if PG<24 then if PG~=0X17 then local sQ=IG[0X01];local NQ=g(function(...)V();do for vG in...do V(true,vG);end;end;end);NQ(RF[sQ],RF[sQ+1],RF[sQ+0X00002]);IF=sQ;RF[sQ]=NQ;FF=IG[0X00003];else(RF)[IG[0x1]]=IG[4];end;else do if not(PG<0X19)then do if PG==26 then if RF[IG[0X3]]<=RF[IG[0x0002]]then FF=IG[0X1];end;else local tX=IG[0x01];local SX,VX,QX=RF[tX]();if SX then(RF)[tX+1]=VX;(RF)[tX+0X0002]=QX;do FF=IG[0X03];end;end;end;end;else IF=IG[1];(RF)[IF]=RF[IF]();end;end;end;end;end;else if PG<11 then do if PG>=0x5 then if not(PG>=0X00008)then if PG>=0X6 then if PG==0x7 then(RF[IG[0X1]])[RF[IG[0X00003]]]=IG[7];else local A2=(IG[0X1]);do RF[A2]=RF[A2](b(RF,A2+0X1,IF));end;IF=A2;end;else(RF)[IG[1]]=RF[IG[3]]-RF[IG[2]];end;else if PG<9 then local LI=RF[IG[3]];local kI=(IG[0x0001]);(RF)[kI+0X1]=LI;do RF[kI]=LI[IG[7]];end;else if PG==0XA then local al=IG[1];local gl,tl=RF[al]();if gl then do(RF)[al+0x01]=tl;end;FF=IG[3];end;else do(RF)[IG[0X1]]=RF[IG[0X3]][IG[7]];end;end;end;end;else if PG>=2 then if PG>=0x00003 then if PG~=0X4 then do if IG[2]==183 then FF=FF-0X0001;VD[FF]={[6]=49,[3]=(IG[3]-0x18),[0x01]=(IG[0X01]-24)};else if RF[IG[1]]then FF=IG[3];end;end;end;else do o_[IG[3]]=RF[IG[0x001]];end;end;else repeat local kG,NG=oD,(RF);if not(#kG>0x000)then else local PP=({});do for He,ye in h,kG do for e6,b6 in h,ye do if b6[1]==NG and b6[0X00002]>=0X0 then local A6=(b6[0X2]);if not PP[A6]then(PP)[A6]={NG[A6]};end;b6[0X1]=PP[A6];b6[2]=0X001;end;end;end;end;end;until true;local K2=IG[1];return false,K2,K2;end;else if PG~=1 then(RF)[IG[1]]=RF[IG[3]]<=RF[IG[0X2]];else RF[IG[1]]=RF[IG[3]][RF[IG[0X2]]];end;end;end;end;else if PG>=16 then if PG<0X13 then do if PG>=0x11 then if PG==18 then do(RF)[IG[0X1]]=-RF[IG[3]];end;else repeat local vU,lU=oD,RF;if#vU>0 then local FJ={};do for q7,n7 in h,vU do for YY,dY in h,n7 do if not(dY[1]==lU and dY[2]>=0)then else local Yi=(dY[2]);if not FJ[Yi]then FJ[Yi]={lU[Yi]};end;(dY)[0x1]=FJ[Yi];do dY[2]=1;end;end;end;end;end;end;until true;return true,IG[1],0X01;end;else local YD=IG[0x1];RF[YD](b(RF,YD+0X00001,IF));do IF=YD-0X1;end;end;end;else if not(PG>=20)then repeat local EQ,FQ=oD,(RF);do if#EQ>0X00000 then local ow=({});for xw,pw in h,EQ do for Pv,Qv in h,pw do if Qv[0X1]==FQ and Qv[0X2]>=0X0 then local td=Qv[2];do if not ow[td]then ow[td]={FQ[td]};end;end;Qv[0X1]=ow[td];do(Qv)[0x00002]=0X1;end;end;end;end;end;end;until true;return true,IG[1],0x00000;else do if PG==0X15 then OF[IG[4]]=RF[IG[0x1]];else repeat local sR,MR,rR=oD,RF,IG[0X00001];do if not(#sR>0X0)then else local YJ={};for d2,c2 in h,sR do for iu,Vu in h,c2 do do if not(Vu[1]==MR and Vu[0X2]>=rR)then else local VG=(Vu[2]);if not(not YJ[VG])then else YJ[VG]={MR[VG]};end;Vu[1]=YJ[VG];(Vu)[0X02]=0X0001;end;end;end;end;end;end;until true;end;end;end;end;else do if not(PG>=0XD)then if PG~=0xc then if IG[0X00002]==0X000E5 then FF=FF-1;do(VD)[FF]={[0x3]=(IG[0X003]-0X89),[6]=0X50,[1]=(IG[1]-0X00089)};end;elseif IG[2]~=0x56 then RF[IG[0X00001]]=#RF[IG[0X3]];else do FF=FF-0X1;end;VD[FF]={[0x3]=(IG[3]-203),[0X1]=(IG[1]-203),[0X6]=88};end;else(RF[IG[1]])[RF[IG[0X3]]]=RF[IG[2]];end;else if not(PG>=14)then local Op=IG[1];do RF[Op]=RF[Op](RF[Op+0X1]);end;do IF=Op;end;else do if PG==0Xf then RF[IG[1]]={b({},1,IG[0x3])};else local as=IG[1];local ks,ms,Us=RF[as],RF[as+1],RF[as+0x2];(RF)[as]=g(function()do for Vn=ks,ms,Us do(V)(true,Vn);end;end;end);FF=IG[3];end;end;end;end;end;end;end;end;else do if PG<0X44 then if not(PG<56)then if not(PG>=62)then if PG>=0X03B then do if not(PG>=0X3C)then RF[IG[0X01]]=not RF[IG[3]];else if PG~=61 then(RF)[IG[0X1]]=RF[IG[0X3]]/IG[0X00007];else(RF)[IG[0X1]]=RF[IG[3]]/RF[IG[2]];end;end;end;else if not(PG<0X39)then do if PG~=0X3a then IF=IG[0X1];(RF[IF])();do IF=IF-0X01;end;else RF[IG[0X1]]=RF[IG[3]]+RF[IG[2]];end;end;else local T7=(IG[1]);local b7=(IG[0x03]);do IF=T7+b7-1;end;do repeat local mm,sm=oD,RF;if#mm>0 then local Lb=({});for yp,Xp in h,mm do do for PM,cM in h,Xp do do if not(cM[0x01]==sm and cM[2]>=0)then else local w7=(cM[2]);if not Lb[w7]then(Lb)[w7]={sm[w7]};end;cM[0x1]=Lb[w7];do(cM)[0X2]=1;end;end;end;end;end;end;end;until true;end;return true,T7,b7;end;end;else do if not(PG>=65)then if not(PG<0X3F)then do if PG==0x0040 then FF=IG[0x03];else RF[IG[1]]=i(RF[IG[0X003]],RF[IG[2]]);end;end;else if RF[IG[0X3]]==RF[IG[0X0002]]then FF=IG[1];end;end;else do if PG<66 then if RF[IG[3]]==IG[0X7]then else FF=IG[0X1];end;else do if PG==67 then(RF)[IG[1]]=RF[IG[0x3]]~=IG[7];else local CZ=IG[0x0003];local TZ=(IG[1]);if CZ==0X0 then else IF=TZ+CZ-0X1;end;local QZ,MZ,wZ=IG[2],nil,nil;if CZ~=0x00001 then MZ,wZ=r_(RF[TZ](b(RF,TZ+0X1,IF)));else MZ,wZ=r_(RF[TZ]());end;do if QZ==1 then do IF=TZ-1;end;else if QZ~=0 then MZ=TZ+QZ-0X02;IF=MZ+1;else MZ=MZ+TZ-0X01;IF=MZ;end;local iZ=0X0;for fN=TZ,MZ do iZ=iZ+0X1;RF[fN]=wZ[iZ];end;end;end;end;end;end;end;end;end;end;else do if not(PG<0X032)then if not(PG<0X35)then if PG<54 then(RF[IG[1]])[IG[0X4]]=IG[0X7];else if PG~=0X00037 then local VE=(HD[IG[0X003]]);VE[0x1][VE[2]]=RF[IG[1]];else(RF)[IG[0X1]]=false;end;end;else if not(PG>=51)then(RF)[IG[0X001]]=y(RF[IG[3]],RF[IG[0X2]]);else do if PG~=52 then if IG[0X02]~=0X059 then if not RF[IG[1]]then FF=IG[0X3];end;else FF=FF-0X00001;VD[FF]={[1]=(IG[1]-191),[3]=(IG[0X3]-0Xbf),[0X0006]=2};end;else local WY=(IG[0X2]-0X01)*0X32;local lY=(IG[0X1]);local rY=RF[lY];for ig=1,IG[0X3]do rY[WY+ig]=RF[lY+ig];end;end;end;end;end;else if PG>=47 then if not(PG<48)then if PG==0x0031 then if IG[0X02]==99 then do FF=FF-1;end;VD[FF]={[6]=0X00050,[0X3]=(IG[0x00003]-220),[1]=(IG[0x001]-0XdC)};elseif IG[2]==79 then FF=FF-1;VD[FF]={[3]=(IG[3]-0X000080),[1]=(IG[0X1]-128),[6]=88};else repeat local C6,m6=oD,(RF);do if#C6>0 then local BB=({});for Te,xe in h,C6 do for yC,uC in h,xe do if not(uC[1]==m6 and uC[0x02]>=0)then else local IU=(uC[0X2]);if not(not BB[IU])then else(BB)[IU]={m6[IU]};end;uC[0X1]=BB[IU];uC[0x02]=0X001;end;end;end;end;end;until true;return;end;else RF[IG[1]]=z(RF[IG[0x0003]],RF[IG[0X2]]);end;else(RF)[IG[1]]=OF[IG[4]];end;else do if PG==0X2e then RF[IG[0x0001]]=RF[IG[0x3]]~=RF[IG[2]];else local rS=IG[1];local WS=(IG[0X00002]-1)*50;local yS=RF[rS];do for Ff=0X1,IF-rS do yS[WS+Ff]=RF[rS+Ff];end;end;end;end;end;end;end;end;else if not(PG>=0X004F)then if not(PG<0X49)then if not(PG<76)then if not(PG<0X4d)then if PG==0X4e then do(RF)[IG[0X0001]]=u(RF[IG[0X3]],RF[IG[0X02]]);end;else local XY=(IG[0X1]);IF=XY+IG[3]-0X0001;RF[XY](b(RF,XY+1,IF));IF=XY-1;end;else for od=IG[0X1],IG[0X0003]do RF[od]=nil;end;end;else if PG<74 then if IG[0X02]~=0X00060 then do repeat local dB,tB=oD,RF;if not(#dB>0)then else local dj=({});do for Mz,yz in h,dB do for Ir,Xr in h,yz do if not(Xr[0X01]==tB and Xr[2]>=0)then else local Wr=Xr[2];do if not(not dj[Wr])then else dj[Wr]={tB[Wr]};end;end;do Xr[1]=dj[Wr];end;(Xr)[0x002]=0x1;end;end;end;end;end;until true;end;local XU=IG[0X1];return false,XU,XU+IG[0X3]-0X00002;else FF=FF-0X1;(VD)[FF]={[1]=(IG[1]-146),[0X6]=0x054,[0X3]=(IG[3]-0x092)};end;else if PG==75 then local Ls=IG[1];local Es=g(function(...)V();for VV,fV in...do V(true,VV,fV);end;end);(Es)(RF[Ls],RF[Ls+1],RF[Ls+0X002]);IF=Ls;RF[Ls]=Es;FF=IG[3];else do(RF)[IG[1]]=RF[IG[3]]<RF[IG[2]];end;end;end;end;else do if not(PG>=0X46)then if PG~=0X45 then local yx=(IG[0X1]);local Ix,Sx=RF[yx]();if Ix then for rY=1,IG[2]do do RF[yx+rY]=Sx[rY];end;end;do FF=IG[0X003];end;end;else if not(not(RF[IG[0X3]]<IG[7]))then else FF=IG[0X0001];end;end;else do if not(PG>=71)then local sp=IG[1];(RF[sp])(RF[sp+1],RF[sp+2]);IF=sp-0X1;else if PG==0X48 then do RF[IG[0X1]]=RF[IG[3]]==RF[IG[0X2]];end;else if RF[IG[3]]<RF[IG[0X0002]]then FF=IG[1];end;end;end;end;end;end;end;else do if not(PG>=85)then if not(PG>=82)then if PG<0X50 then RF[IG[1]]=o_[IG[3]];else if PG==0X51 then if not(not(RF[IG[0X0003]]<=IG[0X7]))then else FF=IG[1];end;else do if IG[0X2]~=0X1 then(RF)[IG[1]]=RF[IG[0x3]];else FF=FF-1;do VD[FF]={[0X6]=0X12,[1]=(IG[0X0001]-124),[0X03]=(IG[3]-0X7C)};end;end;end;end;end;else if not(PG>=83)then(RF)[IG[1]]=RF[IG[3]]^RF[IG[0X2]];else if PG==0X054 then local zU,kU=IG[1],(uF-GD);if not(kU<0)then else kU=-0X01;end;for gn=zU,zU+kU do(RF)[gn]=wF[GD+(gn-zU)+0X1];end;do IF=zU+kU;end;else local LP=(IG[0X1]);RF[LP](RF[LP+1]);IF=LP-1;end;end;end;else do if PG<88 then do if not(PG<0X56)then if PG==0X57 then(RF)[IG[1]]=RF[IG[3]]%IG[7];else local cR=(IG[0X00001]);local wR=g(function(...)(V)();for e8,c8,w8,j8,t8,O8,P8,f8,x8,D8 in...do(V)(true,{e8,c8,w8,j8,t8,O8,P8,f8,x8,D8});end;end);(wR)(RF[cR],RF[cR+1],RF[cR+0x00002]);do IF=cR;end;RF[cR]=wR;FF=IG[0x003];end;else do repeat local ek,Nk=oD,(RF);if#ek>0 then local I0=({});do for NZ,KZ in h,ek do for qr,nr in h,KZ do if not(nr[0X1]==Nk and nr[2]>=0)then else local Om=(nr[2]);if not(not I0[Om])then else I0[Om]={Nk[Om]};end;nr[0X1]=I0[Om];(nr)[2]=0X1;end;end;end;end;end;until true;end;return false,IG[1],IF;end;end;else if not(PG>=89)then if IG[2]==90 then FF=FF-0X1;VD[FF]={[6]=80,[3]=(IG[3]-0XD7),[1]=(IG[1]-215)};else do RF[IG[0X1]]=nil;end;end;else do if PG==0x5a then local mt=(cD[IG[0X00003]]);local Rt=mt[0X1];local ot=nil;local ht=(#Rt);do if not(ht>0X0)then else do ot={};end;do for qm=0X1,ht do local Lm=Rt[qm];if Lm[1]~=0X000 then do ot[qm-1]=HD[Lm[2]];end;else ot[qm-1]={RF,Lm[2]};end;end;end;J(oD,ot);end;end;RF[IG[0X00001]]=p_(mt,ot,OF);else(RF)[IG[0x001]]=RF[IG[3]]*RF[IG[2]];end;end;end;end;end;end;end;end;end;end;end;end;end;end);do if not(yF)then if G(ZF)~='\115t\114\105\110g'then(o)(ZF,0);else if t(ZF,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if t(ZF,"\094.\045\058%d+: ")then(o)("Luraph Script:"..(kD[FF-0x1]or'\040\105\110\116\101r\110a\108)')..'\058\032'..O(ZF),0X0);else(o)(ZF,0X0);end;end;else if ZF then if aF~=0x1 then return RF[zF](b(RF,zF+0X1,IF));else return RF[zF]();end;elseif not(zF)then else return b(RF,zF,aF);end;end;end;end;end;if X then X(XD,iD);end;return XD;end;else function q_()local MT,UT,lT,XT,BT={nil,{},s_,nil,nil,{},s_,{},nil},nil,nil,nil,(nil);for kM=0X0,3 do if not(kM<=0X0001)then do if kM==2 then XT=P();else BT={};end;end;else do if kM~=0 then lT={};else UT={};end;end;end;end;local nT,qT,vT=nil,nil,nil;for ba=0X00,5 do do if ba<=0x2 then do if ba<=0 then for lN=0X1,XT do local qN,ZN,ON=nil,nil,nil;for ef=0,3 do if ef<=0X1 then if ef~=0X0 then ZN=P();else do qN=P();end;end;else if ef==0x2 then ON=P();else for Ne=qN,ZN do MT[0X6][Ne]=ON;end;end;end;end;end;else do if ba~=1 then(MT)[14]=P();else(MT)[13]=P();end;end;end;end;else if ba<=3 then do nT=P()-66068;end;else if ba==0X4 then qT=1;else do vT=L();end;end;end;end;end;end;local eT=(L()~=0x0);for mk=0X1,nT do local sk=(s_);local Ck=L();BT[mk-0X1]=qT;if Ck==0Xa8 then do sk=true;end;elseif Ck==0X014 then sk=R()+P();elseif Ck==114 then do sk=D();end;elseif Ck==0xcF then do sk=D();end;elseif Ck==177 then sk=p(v_(vT),0x4);elseif Ck==70 then sk=R();elseif Ck==196 then sk=p(v_(vT),R()+P());elseif Ck==0X01A then sk=R();elseif Ck==92 then sk=D();elseif Ck~=y_ then else sk=false;end;local bk=({sk,{}});lT[qT]=bk;local Lk=(1);do while Lk~=2 do do if Lk~=0 then qT=qT+0X00001;do Lk=0X00000;end;else if eT then local jX=1;while jX<2 do do if jX==0 then O_=O_+0X0001;jX=0X2;else(G_)[O_]=bk;jX=0;end;end;end;end;Lk=0X2;end;end;end;end;end;MT[9]=F();MT[0Xa]=L();do(MT)[0X000011]=L();end;(MT)[0X00E]=P();local JT,mT=nil,nil;local KT=(1);while KT<4 do if not(KT<=0X1)then if KT~=0x2 then(MT)[3]=F();KT=0X0000;else mT=MT[Y_];KT=4;end;else if KT==0 then JT=P()-0X6d33;KT=2;else do MT[19]=L();end;KT=3;end;end;end;for EX=0X0,JT-1 do do(mT)[EX]=q_();end;end;KT=0X1;local aT,iT=nil,nil;repeat if not(KT<=0)then if KT==0X1 then aT=P()-i_;KT=0;else do for Qz=0X1,aT do do iT[Qz]={[2]=A(),[4]=L(),[Z_]=L(),[0X3]=A(),[n_]=L(),[0X1]=A(),[6]=F()};end;end;end;do KT=0X003;end;end;else do iT=MT[8];end;KT=0X2;end;until KT>2;do for Mz=1,aT do local yz=(nil);for fU=0x0,1 do if fU~=0x0 then for GG,TG in C_(C)do local lG,vG,gG=0X2,nil,(nil);while lG<3 do if not(lG<=0)then if lG==1 then gG=yz[vG];lG=0X0000;else vG=K[TG];lG=1;end;else do if gG==B_ then local ii,Ti=BT[yz[TG]],0X1;local pi=nil;while Ti<2 do if Ti~=0X0 then pi=lT[ii];Ti=0;else if not(pi)then else local nP=nil;local hP=2;while hP<3 do do if not(hP<=0)then do if hP~=0X1 then(yz)[vG]=pi[0X1];hP=0;else(nP)[#nP+1]={yz,vG};hP=0X3;end;end;else do nP=pi[2];end;hP=1;end;end;end;end;Ti=0X0002;end;end;elseif gG==7 then yz[TG]=Mz+yz[TG]+1;end;end;lG=3;end;end;end;else yz=MT[8][Mz];end;end;end;end;local rT=(L());do(MT)[0x5]=T(rT,0X1,0x0001)~=0;end;do for CP=0,0x004 do if CP<=0x1 then do if CP==0 then(MT)[4]=T(rT,0X2,0x001)~=0;else(MT)[0X01]=UT;end;end;else if not(CP<=2)then if CP~=3 then return MT;else MT[0X07]=F();end;else for EW=0X001,F()do UT[EW]={L(),F()};end;end;end;end;end;end;end;else if ZL==5 then do f_=q_();end;else do o_[0x4]=G_;end;end;end;end;elseif not(ZL<=0X0)then if ZL==0X1 then v_=function(vN)local hN,JN=nil,(nil);local lN=2;while lN<0x3 do if lN<=0 then for nn=1,hN,7997 do local zn,yn,Xn=0X0,nil,nil;do repeat if not(zn<=1)then if not(zn<=0X0002)then do if zn~=3 then if not(yn>hN)then else do yn=hN;end;end;zn=1;else for fz=1,#Xn do local Fz=(0X1);while(true)do if Fz~=0 then(Xn)[fz]=x(Xn[fz],M);Fz=0;else M=(vN*M+0x055)%256;break;end;end;end;zn=2;end;end;else do JN=JN..f(b(Xn));end;do zn=0X00005;end;end;else do if zn==0X0 then do yn=nn+7997-1;end;do zn=4;end;else Xn={q(B,Z+nn-1,Z+yn-1)};zn=3;end;end;end;until zn==0X5;end;end;do lN=3;end;else do if lN~=1 then hN=P();lN=0X1;else do JN="";end;lN=0;end;end;end;end;lN=0x00000;while(true)do if lN~=0 then return JN;else do Z=Z+hN;end;lN=1;end;end;end;else end;else do o_={};end;end;end;end;K_=0X1;do while true do if K_==0 then return p_(f_,nil,S)(...);else G_=nil;K_=0;end;end;end;end)('\098x\111r',0X197e,string.match,nil,8,string.rep,0X7,5,1,0x00009,0X6,231,next,0X0000B,0XC,'\114\115\104\105f\116',string.gsub,bit,string.sub,coroutine.yield,3,string.byte,string.char,0X002,0,bit32,52,table.insert,table.unpack,"\098\097n\100",tostring,ipairs,16,0X00004,65536,0XA,getfenv,error,...);
